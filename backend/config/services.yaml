# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    upload_dir_name: 'upload'
    upload_base_url: '%env(SITE_BASE_URL)%/%upload_dir_name%'
    image_folder: '%env(IMAGE_FOLDER)%'
    original_image: '%env(ORIGINAL_IMAGE)%'
    primary_language: '%env(PRIMARY_LANGUAGE)%'
    malath_username: '%env(MALATH_USERNAME)%'
    malath_password: '%env(MALATH_PASSWORD)%'
    store_url_on_google_play_store: '%env(STORE_APP_URL_ON_GOOGLE_PLAY_STORE)%'
    store_url_on_apple_store: '%env(STORE_APP_URL_ON_APPLE_STORE)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $uploadBaseUrl: '%upload_base_url%'
            $fileSystem: '@oneup_flysystem.default_filesystem_filesystem'
            $primaryLanguage: '%primary_language%'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Symfony\Component\Asset\Context\RequestStackContext: '@assets.context'
    Liip\ImagineBundle\Service\FilterService: '@liip_imagine.service.filter'